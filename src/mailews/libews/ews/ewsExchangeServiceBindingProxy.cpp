/* ewsExchangeServiceBindingProxy.cpp
   Generated by gSOAP 2.8.21 from Services.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "ewsExchangeServiceBindingProxy.h"

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy()
{	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(const char *url)
{	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(soap_mode iomode)
{	ExchangeServiceBindingProxy_init(iomode, iomode);
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(const char *url, soap_mode iomode)
{	ExchangeServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(soap_mode imode, soap_mode omode)
{	ExchangeServiceBindingProxy_init(imode, omode);
}

ExchangeServiceBindingProxy::~ExchangeServiceBindingProxy()
{ }

void ExchangeServiceBindingProxy::ExchangeServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ews2", "http://schemas.microsoft.com/exchange/services/2006/types", NULL, NULL},
	{"ews1", "http://schemas.microsoft.com/exchange/services/2006/messages", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void ExchangeServiceBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ExchangeServiceBindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ExchangeServiceBindingProxy::soap_noheader()
{	this->header = NULL;
}

void ExchangeServiceBindingProxy::soap_header(ews2__ExchangeImpersonationType *ews2__ExchangeImpersonation, std::string *ews2__MailboxCulture, enum ews2__AvailabilityProxyRequestType *ews2__ProxyRequestTypeHeader, _ews2__RequestServerVersion *ews2__RequestServerVersion, ews2__SerializedSecurityContextType *ews2__SerializedSecurityContext, _ews2__ServerVersionInfo *ews2__ServerVersionInfo, ews2__TimeZoneContextType *ews2__TimeZoneContext)
{	::soap_header(this);
	this->header->ews2__ExchangeImpersonation = ews2__ExchangeImpersonation;
	this->header->ews2__MailboxCulture = ews2__MailboxCulture;
	this->header->ews2__ProxyRequestTypeHeader = ews2__ProxyRequestTypeHeader;
	this->header->ews2__RequestServerVersion = ews2__RequestServerVersion;
	this->header->ews2__SerializedSecurityContext = ews2__SerializedSecurityContext;
	this->header->ews2__ServerVersionInfo = ews2__ServerVersionInfo;
	this->header->ews2__TimeZoneContext = ews2__TimeZoneContext;
}

const SOAP_ENV__Header *ExchangeServiceBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *ExchangeServiceBindingProxy::soap_fault()
{	return this->fault;
}

const char *ExchangeServiceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ExchangeServiceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ExchangeServiceBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int ExchangeServiceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void ExchangeServiceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ExchangeServiceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ExchangeServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ExchangeServiceBindingProxy::ResolveNames(const char *endpoint, const char *soap_action, ews1__ResolveNamesType *ews1__ResolveNames, struct __ews1__ResolveNamesResponse &_param_1)
{	struct soap *soap = this;
	struct __ews1__ResolveNames soap_tmp___ews1__ResolveNames;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ResolveNames";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__ResolveNames.ews1__ResolveNames = ews1__ResolveNames;
	soap_serializeheader(soap);
	soap_serialize___ews1__ResolveNames(soap, &soap_tmp___ews1__ResolveNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__ResolveNames(soap, &soap_tmp___ews1__ResolveNames, "-ews1:ResolveNames", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__ResolveNames(soap, &soap_tmp___ews1__ResolveNames, "-ews1:ResolveNames", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default___ews1__ResolveNamesResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__ResolveNamesResponse(soap, &_param_1, "-ews1:ResolveNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ExpandDL(const char *endpoint, const char *soap_action, ews1__ExpandDLType *ews1__ExpandDL, struct __ews1__ExpandDLResponse &_param_2)
{	struct soap *soap = this;
	struct __ews1__ExpandDL soap_tmp___ews1__ExpandDL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ExpandDL";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__ExpandDL.ews1__ExpandDL = ews1__ExpandDL;
	soap_serializeheader(soap);
	soap_serialize___ews1__ExpandDL(soap, &soap_tmp___ews1__ExpandDL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__ExpandDL(soap, &soap_tmp___ews1__ExpandDL, "-ews1:ExpandDL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__ExpandDL(soap, &soap_tmp___ews1__ExpandDL, "-ews1:ExpandDL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_2)
		return soap_closesock(soap);
	soap_default___ews1__ExpandDLResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__ExpandDLResponse(soap, &_param_2, "-ews1:ExpandDLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindFolder(const char *endpoint, const char *soap_action, ews1__FindFolderType *ews1__FindFolder, struct __ews1__FindFolderResponse &_param_3)
{	struct soap *soap = this;
	struct __ews1__FindFolder soap_tmp___ews1__FindFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__FindFolder.ews1__FindFolder = ews1__FindFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__FindFolder(soap, &soap_tmp___ews1__FindFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__FindFolder(soap, &soap_tmp___ews1__FindFolder, "-ews1:FindFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__FindFolder(soap, &soap_tmp___ews1__FindFolder, "-ews1:FindFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_3)
		return soap_closesock(soap);
	soap_default___ews1__FindFolderResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__FindFolderResponse(soap, &_param_3, "-ews1:FindFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindItem(const char *endpoint, const char *soap_action, ews1__FindItemType *ews1__FindItem, struct __ews1__FindItemResponse &_param_4)
{	struct soap *soap = this;
	struct __ews1__FindItem soap_tmp___ews1__FindItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__FindItem.ews1__FindItem = ews1__FindItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__FindItem(soap, &soap_tmp___ews1__FindItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__FindItem(soap, &soap_tmp___ews1__FindItem, "-ews1:FindItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__FindItem(soap, &soap_tmp___ews1__FindItem, "-ews1:FindItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_4)
		return soap_closesock(soap);
	soap_default___ews1__FindItemResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__FindItemResponse(soap, &_param_4, "-ews1:FindItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetFolder(const char *endpoint, const char *soap_action, ews1__GetFolderType *ews1__GetFolder, struct __ews1__GetFolderResponse &_param_5)
{	struct soap *soap = this;
	struct __ews1__GetFolder soap_tmp___ews1__GetFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetFolder.ews1__GetFolder = ews1__GetFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetFolder(soap, &soap_tmp___ews1__GetFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetFolder(soap, &soap_tmp___ews1__GetFolder, "-ews1:GetFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetFolder(soap, &soap_tmp___ews1__GetFolder, "-ews1:GetFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_5)
		return soap_closesock(soap);
	soap_default___ews1__GetFolderResponse(soap, &_param_5);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetFolderResponse(soap, &_param_5, "-ews1:GetFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ConvertId(const char *endpoint, const char *soap_action, ews1__ConvertIdType *ews1__ConvertId, struct __ews1__ConvertIdResponse &_param_6)
{	struct soap *soap = this;
	struct __ews1__ConvertId soap_tmp___ews1__ConvertId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ConvertId";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__ConvertId.ews1__ConvertId = ews1__ConvertId;
	soap_serializeheader(soap);
	soap_serialize___ews1__ConvertId(soap, &soap_tmp___ews1__ConvertId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__ConvertId(soap, &soap_tmp___ews1__ConvertId, "-ews1:ConvertId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__ConvertId(soap, &soap_tmp___ews1__ConvertId, "-ews1:ConvertId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_6)
		return soap_closesock(soap);
	soap_default___ews1__ConvertIdResponse(soap, &_param_6);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__ConvertIdResponse(soap, &_param_6, "-ews1:ConvertIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateFolder(const char *endpoint, const char *soap_action, ews1__CreateFolderType *ews1__CreateFolder, struct __ews1__CreateFolderResponse &_param_7)
{	struct soap *soap = this;
	struct __ews1__CreateFolder soap_tmp___ews1__CreateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CreateFolder.ews1__CreateFolder = ews1__CreateFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__CreateFolder(soap, &soap_tmp___ews1__CreateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CreateFolder(soap, &soap_tmp___ews1__CreateFolder, "-ews1:CreateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CreateFolder(soap, &soap_tmp___ews1__CreateFolder, "-ews1:CreateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_7)
		return soap_closesock(soap);
	soap_default___ews1__CreateFolderResponse(soap, &_param_7);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CreateFolderResponse(soap, &_param_7, "-ews1:CreateFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteFolder(const char *endpoint, const char *soap_action, ews1__DeleteFolderType *ews1__DeleteFolder, struct __ews1__DeleteFolderResponse &_param_8)
{	struct soap *soap = this;
	struct __ews1__DeleteFolder soap_tmp___ews1__DeleteFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__DeleteFolder.ews1__DeleteFolder = ews1__DeleteFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__DeleteFolder(soap, &soap_tmp___ews1__DeleteFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__DeleteFolder(soap, &soap_tmp___ews1__DeleteFolder, "-ews1:DeleteFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__DeleteFolder(soap, &soap_tmp___ews1__DeleteFolder, "-ews1:DeleteFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_8)
		return soap_closesock(soap);
	soap_default___ews1__DeleteFolderResponse(soap, &_param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__DeleteFolderResponse(soap, &_param_8, "-ews1:DeleteFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateFolder(const char *endpoint, const char *soap_action, ews1__UpdateFolderType *ews1__UpdateFolder, struct __ews1__UpdateFolderResponse &_param_9)
{	struct soap *soap = this;
	struct __ews1__UpdateFolder soap_tmp___ews1__UpdateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__UpdateFolder.ews1__UpdateFolder = ews1__UpdateFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__UpdateFolder(soap, &soap_tmp___ews1__UpdateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__UpdateFolder(soap, &soap_tmp___ews1__UpdateFolder, "-ews1:UpdateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__UpdateFolder(soap, &soap_tmp___ews1__UpdateFolder, "-ews1:UpdateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_9)
		return soap_closesock(soap);
	soap_default___ews1__UpdateFolderResponse(soap, &_param_9);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__UpdateFolderResponse(soap, &_param_9, "-ews1:UpdateFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MoveFolder(const char *endpoint, const char *soap_action, ews1__MoveFolderType *ews1__MoveFolder, struct __ews1__MoveFolderResponse &_param_10)
{	struct soap *soap = this;
	struct __ews1__MoveFolder soap_tmp___ews1__MoveFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MoveFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__MoveFolder.ews1__MoveFolder = ews1__MoveFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__MoveFolder(soap, &soap_tmp___ews1__MoveFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__MoveFolder(soap, &soap_tmp___ews1__MoveFolder, "-ews1:MoveFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__MoveFolder(soap, &soap_tmp___ews1__MoveFolder, "-ews1:MoveFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_10)
		return soap_closesock(soap);
	soap_default___ews1__MoveFolderResponse(soap, &_param_10);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__MoveFolderResponse(soap, &_param_10, "-ews1:MoveFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CopyFolder(const char *endpoint, const char *soap_action, ews1__CopyFolderType *ews1__CopyFolder, struct __ews1__CopyFolderResponse &_param_11)
{	struct soap *soap = this;
	struct __ews1__CopyFolder soap_tmp___ews1__CopyFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CopyFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CopyFolder.ews1__CopyFolder = ews1__CopyFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__CopyFolder(soap, &soap_tmp___ews1__CopyFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CopyFolder(soap, &soap_tmp___ews1__CopyFolder, "-ews1:CopyFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CopyFolder(soap, &soap_tmp___ews1__CopyFolder, "-ews1:CopyFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_11)
		return soap_closesock(soap);
	soap_default___ews1__CopyFolderResponse(soap, &_param_11);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CopyFolderResponse(soap, &_param_11, "-ews1:CopyFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::Subscribe(const char *endpoint, const char *soap_action, ews1__SubscribeType *ews1__Subscribe, struct __ews1__SubscribeResponse &_param_12)
{	struct soap *soap = this;
	struct __ews1__Subscribe soap_tmp___ews1__Subscribe;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/Subscribe";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__Subscribe.ews1__Subscribe = ews1__Subscribe;
	soap_serializeheader(soap);
	soap_serialize___ews1__Subscribe(soap, &soap_tmp___ews1__Subscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__Subscribe(soap, &soap_tmp___ews1__Subscribe, "-ews1:Subscribe", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__Subscribe(soap, &soap_tmp___ews1__Subscribe, "-ews1:Subscribe", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_12)
		return soap_closesock(soap);
	soap_default___ews1__SubscribeResponse(soap, &_param_12);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__SubscribeResponse(soap, &_param_12, "-ews1:SubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::Unsubscribe(const char *endpoint, const char *soap_action, ews1__UnsubscribeType *ews1__Unsubscribe, struct __ews1__UnsubscribeResponse &_param_13)
{	struct soap *soap = this;
	struct __ews1__Unsubscribe soap_tmp___ews1__Unsubscribe;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/Unsubscribe";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__Unsubscribe.ews1__Unsubscribe = ews1__Unsubscribe;
	soap_serializeheader(soap);
	soap_serialize___ews1__Unsubscribe(soap, &soap_tmp___ews1__Unsubscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__Unsubscribe(soap, &soap_tmp___ews1__Unsubscribe, "-ews1:Unsubscribe", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__Unsubscribe(soap, &soap_tmp___ews1__Unsubscribe, "-ews1:Unsubscribe", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_13)
		return soap_closesock(soap);
	soap_default___ews1__UnsubscribeResponse(soap, &_param_13);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__UnsubscribeResponse(soap, &_param_13, "-ews1:UnsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetEvents(const char *endpoint, const char *soap_action, ews1__GetEventsType *ews1__GetEvents, struct __ews1__GetEventsResponse &_param_14)
{	struct soap *soap = this;
	struct __ews1__GetEvents soap_tmp___ews1__GetEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetEvents.ews1__GetEvents = ews1__GetEvents;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetEvents(soap, &soap_tmp___ews1__GetEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetEvents(soap, &soap_tmp___ews1__GetEvents, "-ews1:GetEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetEvents(soap, &soap_tmp___ews1__GetEvents, "-ews1:GetEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_14)
		return soap_closesock(soap);
	soap_default___ews1__GetEventsResponse(soap, &_param_14);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetEventsResponse(soap, &_param_14, "-ews1:GetEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SyncFolderHierarchy(const char *endpoint, const char *soap_action, ews1__SyncFolderHierarchyType *ews1__SyncFolderHierarchy, struct __ews1__SyncFolderHierarchyResponse &_param_15)
{	struct soap *soap = this;
	struct __ews1__SyncFolderHierarchy soap_tmp___ews1__SyncFolderHierarchy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderHierarchy";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__SyncFolderHierarchy.ews1__SyncFolderHierarchy = ews1__SyncFolderHierarchy;
	soap_serializeheader(soap);
	soap_serialize___ews1__SyncFolderHierarchy(soap, &soap_tmp___ews1__SyncFolderHierarchy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__SyncFolderHierarchy(soap, &soap_tmp___ews1__SyncFolderHierarchy, "-ews1:SyncFolderHierarchy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__SyncFolderHierarchy(soap, &soap_tmp___ews1__SyncFolderHierarchy, "-ews1:SyncFolderHierarchy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_15)
		return soap_closesock(soap);
	soap_default___ews1__SyncFolderHierarchyResponse(soap, &_param_15);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__SyncFolderHierarchyResponse(soap, &_param_15, "-ews1:SyncFolderHierarchyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SyncFolderItems(const char *endpoint, const char *soap_action, ews1__SyncFolderItemsType *ews1__SyncFolderItems, struct __ews1__SyncFolderItemsResponse &_param_16)
{	struct soap *soap = this;
	struct __ews1__SyncFolderItems soap_tmp___ews1__SyncFolderItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__SyncFolderItems.ews1__SyncFolderItems = ews1__SyncFolderItems;
	soap_serializeheader(soap);
	soap_serialize___ews1__SyncFolderItems(soap, &soap_tmp___ews1__SyncFolderItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__SyncFolderItems(soap, &soap_tmp___ews1__SyncFolderItems, "-ews1:SyncFolderItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__SyncFolderItems(soap, &soap_tmp___ews1__SyncFolderItems, "-ews1:SyncFolderItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_16)
		return soap_closesock(soap);
	soap_default___ews1__SyncFolderItemsResponse(soap, &_param_16);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__SyncFolderItemsResponse(soap, &_param_16, "-ews1:SyncFolderItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetItem(const char *endpoint, const char *soap_action, ews1__GetItemType *ews1__GetItem, struct __ews1__GetItemResponse &_param_17)
{	struct soap *soap = this;
	struct __ews1__GetItem soap_tmp___ews1__GetItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetItem.ews1__GetItem = ews1__GetItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetItem(soap, &soap_tmp___ews1__GetItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetItem(soap, &soap_tmp___ews1__GetItem, "-ews1:GetItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetItem(soap, &soap_tmp___ews1__GetItem, "-ews1:GetItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_17)
		return soap_closesock(soap);
	soap_default___ews1__GetItemResponse(soap, &_param_17);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetItemResponse(soap, &_param_17, "-ews1:GetItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateItem(const char *endpoint, const char *soap_action, ews1__CreateItemType *ews1__CreateItem, struct __ews1__CreateItemResponse &_param_18)
{	struct soap *soap = this;
	struct __ews1__CreateItem soap_tmp___ews1__CreateItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CreateItem.ews1__CreateItem = ews1__CreateItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__CreateItem(soap, &soap_tmp___ews1__CreateItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CreateItem(soap, &soap_tmp___ews1__CreateItem, "-ews1:CreateItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CreateItem(soap, &soap_tmp___ews1__CreateItem, "-ews1:CreateItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_18)
		return soap_closesock(soap);
	soap_default___ews1__CreateItemResponse(soap, &_param_18);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CreateItemResponse(soap, &_param_18, "-ews1:CreateItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteItem(const char *endpoint, const char *soap_action, ews1__DeleteItemType *ews1__DeleteItem, struct __ews1__DeleteItemResponse &_param_19)
{	struct soap *soap = this;
	struct __ews1__DeleteItem soap_tmp___ews1__DeleteItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__DeleteItem.ews1__DeleteItem = ews1__DeleteItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__DeleteItem(soap, &soap_tmp___ews1__DeleteItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__DeleteItem(soap, &soap_tmp___ews1__DeleteItem, "-ews1:DeleteItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__DeleteItem(soap, &soap_tmp___ews1__DeleteItem, "-ews1:DeleteItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_19)
		return soap_closesock(soap);
	soap_default___ews1__DeleteItemResponse(soap, &_param_19);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__DeleteItemResponse(soap, &_param_19, "-ews1:DeleteItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateItem(const char *endpoint, const char *soap_action, ews1__UpdateItemType *ews1__UpdateItem, struct __ews1__UpdateItemResponse &_param_20)
{	struct soap *soap = this;
	struct __ews1__UpdateItem soap_tmp___ews1__UpdateItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__UpdateItem.ews1__UpdateItem = ews1__UpdateItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__UpdateItem(soap, &soap_tmp___ews1__UpdateItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__UpdateItem(soap, &soap_tmp___ews1__UpdateItem, "-ews1:UpdateItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__UpdateItem(soap, &soap_tmp___ews1__UpdateItem, "-ews1:UpdateItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_20)
		return soap_closesock(soap);
	soap_default___ews1__UpdateItemResponse(soap, &_param_20);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__UpdateItemResponse(soap, &_param_20, "-ews1:UpdateItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SendItem(const char *endpoint, const char *soap_action, ews1__SendItemType *ews1__SendItem, struct __ews1__SendItemResponse &_param_21)
{	struct soap *soap = this;
	struct __ews1__SendItem soap_tmp___ews1__SendItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SendItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__SendItem.ews1__SendItem = ews1__SendItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__SendItem(soap, &soap_tmp___ews1__SendItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__SendItem(soap, &soap_tmp___ews1__SendItem, "-ews1:SendItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__SendItem(soap, &soap_tmp___ews1__SendItem, "-ews1:SendItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_21)
		return soap_closesock(soap);
	soap_default___ews1__SendItemResponse(soap, &_param_21);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__SendItemResponse(soap, &_param_21, "-ews1:SendItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MoveItem(const char *endpoint, const char *soap_action, ews1__MoveItemType *ews1__MoveItem, struct __ews1__MoveItemResponse &_param_22)
{	struct soap *soap = this;
	struct __ews1__MoveItem soap_tmp___ews1__MoveItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MoveItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__MoveItem.ews1__MoveItem = ews1__MoveItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__MoveItem(soap, &soap_tmp___ews1__MoveItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__MoveItem(soap, &soap_tmp___ews1__MoveItem, "-ews1:MoveItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__MoveItem(soap, &soap_tmp___ews1__MoveItem, "-ews1:MoveItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_22)
		return soap_closesock(soap);
	soap_default___ews1__MoveItemResponse(soap, &_param_22);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__MoveItemResponse(soap, &_param_22, "-ews1:MoveItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CopyItem(const char *endpoint, const char *soap_action, ews1__CopyItemType *ews1__CopyItem, struct __ews1__CopyItemResponse &_param_23)
{	struct soap *soap = this;
	struct __ews1__CopyItem soap_tmp___ews1__CopyItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CopyItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CopyItem.ews1__CopyItem = ews1__CopyItem;
	soap_serializeheader(soap);
	soap_serialize___ews1__CopyItem(soap, &soap_tmp___ews1__CopyItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CopyItem(soap, &soap_tmp___ews1__CopyItem, "-ews1:CopyItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CopyItem(soap, &soap_tmp___ews1__CopyItem, "-ews1:CopyItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_23)
		return soap_closesock(soap);
	soap_default___ews1__CopyItemResponse(soap, &_param_23);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CopyItemResponse(soap, &_param_23, "-ews1:CopyItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateAttachment(const char *endpoint, const char *soap_action, ews1__CreateAttachmentType *ews1__CreateAttachment, struct __ews1__CreateAttachmentResponse &_param_24)
{	struct soap *soap = this;
	struct __ews1__CreateAttachment soap_tmp___ews1__CreateAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CreateAttachment.ews1__CreateAttachment = ews1__CreateAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews1__CreateAttachment(soap, &soap_tmp___ews1__CreateAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CreateAttachment(soap, &soap_tmp___ews1__CreateAttachment, "-ews1:CreateAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CreateAttachment(soap, &soap_tmp___ews1__CreateAttachment, "-ews1:CreateAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_24)
		return soap_closesock(soap);
	soap_default___ews1__CreateAttachmentResponse(soap, &_param_24);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CreateAttachmentResponse(soap, &_param_24, "-ews1:CreateAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteAttachment(const char *endpoint, const char *soap_action, ews1__DeleteAttachmentType *ews1__DeleteAttachment, struct __ews1__DeleteAttachmentResponse &_param_25)
{	struct soap *soap = this;
	struct __ews1__DeleteAttachment soap_tmp___ews1__DeleteAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__DeleteAttachment.ews1__DeleteAttachment = ews1__DeleteAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews1__DeleteAttachment(soap, &soap_tmp___ews1__DeleteAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__DeleteAttachment(soap, &soap_tmp___ews1__DeleteAttachment, "-ews1:DeleteAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__DeleteAttachment(soap, &soap_tmp___ews1__DeleteAttachment, "-ews1:DeleteAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_25)
		return soap_closesock(soap);
	soap_default___ews1__DeleteAttachmentResponse(soap, &_param_25);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__DeleteAttachmentResponse(soap, &_param_25, "-ews1:DeleteAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetAttachment(const char *endpoint, const char *soap_action, ews1__GetAttachmentType *ews1__GetAttachment, struct __ews1__GetAttachmentResponse &_param_26)
{	struct soap *soap = this;
	struct __ews1__GetAttachment soap_tmp___ews1__GetAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetAttachment.ews1__GetAttachment = ews1__GetAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetAttachment(soap, &soap_tmp___ews1__GetAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetAttachment(soap, &soap_tmp___ews1__GetAttachment, "-ews1:GetAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetAttachment(soap, &soap_tmp___ews1__GetAttachment, "-ews1:GetAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_26)
		return soap_closesock(soap);
	soap_default___ews1__GetAttachmentResponse(soap, &_param_26);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetAttachmentResponse(soap, &_param_26, "-ews1:GetAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateManagedFolder(const char *endpoint, const char *soap_action, ews1__CreateManagedFolderRequestType *ews1__CreateManagedFolder, struct __ews1__CreateManagedFolderResponse &_param_27)
{	struct soap *soap = this;
	struct __ews1__CreateManagedFolder soap_tmp___ews1__CreateManagedFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateManagedFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__CreateManagedFolder.ews1__CreateManagedFolder = ews1__CreateManagedFolder;
	soap_serializeheader(soap);
	soap_serialize___ews1__CreateManagedFolder(soap, &soap_tmp___ews1__CreateManagedFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__CreateManagedFolder(soap, &soap_tmp___ews1__CreateManagedFolder, "-ews1:CreateManagedFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__CreateManagedFolder(soap, &soap_tmp___ews1__CreateManagedFolder, "-ews1:CreateManagedFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_27)
		return soap_closesock(soap);
	soap_default___ews1__CreateManagedFolderResponse(soap, &_param_27);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__CreateManagedFolderResponse(soap, &_param_27, "-ews1:CreateManagedFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetDelegate(const char *endpoint, const char *soap_action, ews1__GetDelegateType *ews1__GetDelegate, struct __ews1__GetDelegateResponse &_param_28)
{	struct soap *soap = this;
	struct __ews1__GetDelegate soap_tmp___ews1__GetDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetDelegate.ews1__GetDelegate = ews1__GetDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetDelegate(soap, &soap_tmp___ews1__GetDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetDelegate(soap, &soap_tmp___ews1__GetDelegate, "-ews1:GetDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetDelegate(soap, &soap_tmp___ews1__GetDelegate, "-ews1:GetDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_28)
		return soap_closesock(soap);
	soap_default___ews1__GetDelegateResponse(soap, &_param_28);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetDelegateResponse(soap, &_param_28, "-ews1:GetDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddDelegate(const char *endpoint, const char *soap_action, ews1__AddDelegateType *ews1__AddDelegate, struct __ews1__AddDelegateResponse &_param_29)
{	struct soap *soap = this;
	struct __ews1__AddDelegate soap_tmp___ews1__AddDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__AddDelegate.ews1__AddDelegate = ews1__AddDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews1__AddDelegate(soap, &soap_tmp___ews1__AddDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__AddDelegate(soap, &soap_tmp___ews1__AddDelegate, "-ews1:AddDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__AddDelegate(soap, &soap_tmp___ews1__AddDelegate, "-ews1:AddDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_29)
		return soap_closesock(soap);
	soap_default___ews1__AddDelegateResponse(soap, &_param_29);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__AddDelegateResponse(soap, &_param_29, "-ews1:AddDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveDelegate(const char *endpoint, const char *soap_action, ews1__RemoveDelegateType *ews1__RemoveDelegate, struct __ews1__RemoveDelegateResponse &_param_30)
{	struct soap *soap = this;
	struct __ews1__RemoveDelegate soap_tmp___ews1__RemoveDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__RemoveDelegate.ews1__RemoveDelegate = ews1__RemoveDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews1__RemoveDelegate(soap, &soap_tmp___ews1__RemoveDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__RemoveDelegate(soap, &soap_tmp___ews1__RemoveDelegate, "-ews1:RemoveDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__RemoveDelegate(soap, &soap_tmp___ews1__RemoveDelegate, "-ews1:RemoveDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_30)
		return soap_closesock(soap);
	soap_default___ews1__RemoveDelegateResponse(soap, &_param_30);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__RemoveDelegateResponse(soap, &_param_30, "-ews1:RemoveDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateDelegate(const char *endpoint, const char *soap_action, ews1__UpdateDelegateType *ews1__UpdateDelegate, struct __ews1__UpdateDelegateResponse &_param_31)
{	struct soap *soap = this;
	struct __ews1__UpdateDelegate soap_tmp___ews1__UpdateDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__UpdateDelegate.ews1__UpdateDelegate = ews1__UpdateDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews1__UpdateDelegate(soap, &soap_tmp___ews1__UpdateDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__UpdateDelegate(soap, &soap_tmp___ews1__UpdateDelegate, "-ews1:UpdateDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__UpdateDelegate(soap, &soap_tmp___ews1__UpdateDelegate, "-ews1:UpdateDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_31)
		return soap_closesock(soap);
	soap_default___ews1__UpdateDelegateResponse(soap, &_param_31);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__UpdateDelegateResponse(soap, &_param_31, "-ews1:UpdateDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserAvailability(const char *endpoint, const char *soap_action, ews1__GetUserAvailabilityRequestType *ews1__GetUserAvailabilityRequest, struct __ews1__GetUserAvailabilityResponse &_param_32)
{	struct soap *soap = this;
	struct __ews1__GetUserAvailability soap_tmp___ews1__GetUserAvailability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserAvailability";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetUserAvailability.ews1__GetUserAvailabilityRequest = ews1__GetUserAvailabilityRequest;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetUserAvailability(soap, &soap_tmp___ews1__GetUserAvailability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetUserAvailability(soap, &soap_tmp___ews1__GetUserAvailability, "-ews1:GetUserAvailability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetUserAvailability(soap, &soap_tmp___ews1__GetUserAvailability, "-ews1:GetUserAvailability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_32)
		return soap_closesock(soap);
	soap_default___ews1__GetUserAvailabilityResponse(soap, &_param_32);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetUserAvailabilityResponse(soap, &_param_32, "-ews1:GetUserAvailabilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserOofSettings(const char *endpoint, const char *soap_action, ews1__GetUserOofSettingsRequest *ews1__GetUserOofSettingsRequest_, struct __ews1__GetUserOofSettingsResponse &_param_33)
{	struct soap *soap = this;
	struct __ews1__GetUserOofSettings soap_tmp___ews1__GetUserOofSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserOofSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__GetUserOofSettings.ews1__GetUserOofSettingsRequest_ = ews1__GetUserOofSettingsRequest_;
	soap_serializeheader(soap);
	soap_serialize___ews1__GetUserOofSettings(soap, &soap_tmp___ews1__GetUserOofSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__GetUserOofSettings(soap, &soap_tmp___ews1__GetUserOofSettings, "-ews1:GetUserOofSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__GetUserOofSettings(soap, &soap_tmp___ews1__GetUserOofSettings, "-ews1:GetUserOofSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_33)
		return soap_closesock(soap);
	soap_default___ews1__GetUserOofSettingsResponse(soap, &_param_33);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__GetUserOofSettingsResponse(soap, &_param_33, "-ews1:GetUserOofSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetUserOofSettings(const char *endpoint, const char *soap_action, ews1__SetUserOofSettingsRequest *ews1__SetUserOofSettingsRequest_, struct __ews1__SetUserOofSettingsResponse &_param_34)
{	struct soap *soap = this;
	struct __ews1__SetUserOofSettings soap_tmp___ews1__SetUserOofSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetUserOofSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews1__SetUserOofSettings.ews1__SetUserOofSettingsRequest_ = ews1__SetUserOofSettingsRequest_;
	soap_serializeheader(soap);
	soap_serialize___ews1__SetUserOofSettings(soap, &soap_tmp___ews1__SetUserOofSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews1__SetUserOofSettings(soap, &soap_tmp___ews1__SetUserOofSettings, "-ews1:SetUserOofSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews1__SetUserOofSettings(soap, &soap_tmp___ews1__SetUserOofSettings, "-ews1:SetUserOofSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_34)
		return soap_closesock(soap);
	soap_default___ews1__SetUserOofSettingsResponse(soap, &_param_34);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews1__SetUserOofSettingsResponse(soap, &_param_34, "-ews1:SetUserOofSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
